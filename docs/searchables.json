[{"href": "./index.html", "title": "code block", "contents": "{\n  \"bs-dependencies\": [ \"bs-sql-composer\" ]\n}", "rendered": "<pre><code>{\n  \"bs-dependencies\": [ \"bs-sql-composer\" ]\n}</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Then add bs-sql-composer to your bs-dependencies in bsconfig.json:", "rendered": "Then add <code>bs-sql-composer</code> to your <code>bs-dependencies</code> in <code>bsconfig.json</code>:", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "yarn install --save bs-sql-composer", "rendered": "<pre><code>yarn install --save bs-sql-composer</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Inside of a BuckleScript project:", "rendered": "Inside of a BuckleScript project:", "breadcrumb": "Home"},
{"href": "./index.html#How-do-I-install-it-", "title": "How do I install it?", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT DISTINCT\n  foo\nFROM test\nWHERE 1=1", "rendered": "<pre><code>SELECT DISTINCT\n  foo\nFROM test\nWHERE 1=1</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SqlComposer.Select.(\n  select\n  |. field(\"foo\")\n  |. from(\"test\")\n  |. modifier(`Distinct)\n);", "rendered": "<pre><code>SqlComposer.Select.(\n  select\n  |. field(\"foo\")\n  |. from(\"test\")\n  |. modifier(`Distinct)\n);</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Select-Distinct", "title": "Select Distinct", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  foo AS bar\nFROM test\nWHERE 1=1\nGROUP BY\n  foo\n, thing", "rendered": "<pre><code>SELECT\n  foo AS bar\nFROM test\nWHERE 1=1\nGROUP BY\n  foo\n, thing</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SqlComposer.Select.(\n  select\n  |. from(\"test\")\n  |. field(\"foo AS bar\")\n  |. group_by(\"foo\")\n  |. group_by(\"thing\")\n);", "rendered": "<pre><code>SqlComposer.Select.(\n  select\n  |. from(\"test\")\n  |. field(\"foo AS bar\")\n  |. group_by(\"foo\")\n  |. group_by(\"thing\")\n);</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Group-By", "title": "Group By", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  *\nFROM test\nWHERE 1=1\nORDER BY\n  foo ASC\n, bar DESC", "rendered": "<pre><code>SELECT\n  *\nFROM test\nWHERE 1=1\nORDER BY\n  foo ASC\n, bar DESC</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SqlComposer.Select.(\n  select\n  |. from(\"test\")\n  |. field(\"*\")\n  |. order_by(`Asc(\"foo\"))\n  |. order_by(`Desc(\"bar\"))\n  |. to_sql\n  |. Js.log\n);", "rendered": "<pre><code>SqlComposer.Select.(\n  select\n  |. from(\"test\")\n  |. field(\"*\")\n  |. order_by(`Asc(\"foo\"))\n  |. order_by(`Desc(\"bar\"))\n  |. to_sql\n  |. Js.log\n);</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Order-By", "title": "Order By", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  foo AS bar\nFROM test\nWHERE 1=1", "rendered": "<pre><code>SELECT\n  foo AS bar\nFROM test\nWHERE 1=1</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SqlComposer.Select.(\n  select\n  |. from(\"test\")\n  |. field(\"foo AS bar\")\n  |. to_sql\n  |. Js.log\n);", "rendered": "<pre><code>SqlComposer.Select.(\n  select\n  |. from(\"test\")\n  |. field(\"foo AS bar\")\n  |. to_sql\n  |. Js.log\n);</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Alias-a-field", "title": "Alias a field", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  foo\n, bar\nFROM test\nWHERE 1=1\nAND test.foo = ?", "rendered": "<pre><code>SELECT\n  foo\n, bar\nFROM test\nWHERE 1=1\nAND test.foo = ?</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "  let base_query = SqlComposer.Select.(\n    select\n    |. from(\"test\")\n    |. field(\"foo\")\n    |. field(\"bar\")\n  );\n\n  SqlComposer.Select.(\n    base_query\n    |. where(\"AND test.foo = ?\")\n    |. to_sql\n    |. Js.log\n  );", "rendered": "<pre><code>  let base_query = SqlComposer.Select.(\n    select\n    |. from(\"test\")\n    |. field(\"foo\")\n    |. field(\"bar\")\n  );\n\n  SqlComposer.Select.(\n    base_query\n    |. where(\"AND test.foo = ?\")\n    |. to_sql\n    |. Js.log\n  );</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Adding-to-a-base-query", "title": "Adding to a base query", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  *\nFROM test\nJOIN foo ON test.foo_id = foo.id\nWHERE 1=1", "rendered": "<pre><code>SELECT\n  *\nFROM test\nJOIN foo ON test.foo_id = foo.id\nWHERE 1=1</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. join(\"JOIN foo ON test.foo_id = foo.id\")\n    |. to_sql\n    |. Js.log\n  )", "rendered": "<pre><code>  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. join(\"JOIN foo ON test.foo_id = foo.id\")\n    |. to_sql\n    |. Js.log\n  )</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Join-Clause", "title": "Join Clause", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  *\nFROM test\nWHERE 1=1\nAND test.foo = ?", "rendered": "<pre><code>SELECT\n  *\nFROM test\nWHERE 1=1\nAND test.foo = ?</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. where(\"AND test.foo = ?\")\n    |. to_sql\n    |. Js.log\n  );", "rendered": "<pre><code>  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. where(\"AND test.foo = ?\")\n    |. to_sql\n    |. Js.log\n  );</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Where-Clause", "title": "Where Clause", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "SELECT\n  *\nFROM test\nWHERE 1=1", "rendered": "<pre><code>SELECT\n  *\nFROM test\nWHERE 1=1</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. to_sql\n    |. Js.log\n  );", "rendered": "<pre><code>  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. to_sql\n    |. Js.log\n  );</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html#Basic-Select", "title": "Basic Select", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html#Usage", "title": "Usage", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "A library for SQL composition in BucklesScript", "rendered": "A library for SQL composition in BucklesScript", "breadcrumb": "Home"},
{"href": "./index.html#bs-sql-composer", "title": "bs-sql-composer", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Build Status\nCoverage Status", "rendered": "<a href=\"https://www.travis-ci.org/scull7/bs-sql-composer\" target=\"_blank\" rel=\"noopener nofollow\" title=\"\" class=\"external-link\"><img src='https://www.travis-ci.org/scull7/bs-sql-composer.svg?branch=master' alt='Build Status' /></a>\n<a href=\"https://coveralls.io/github/scull7/bs-sql-composer?branch=master\" target=\"_blank\" rel=\"noopener nofollow\" title=\"\" class=\"external-link\"><img src='https://coveralls.io/repos/github/scull7/bs-sql-composer/badge.svg?branch=master' alt='Coverage Status' /></a>", "breadcrumb": "Home"},
{"href": "./api/SqlComposer.html#value-Select.to_sql", "title": "Select.to_sql", "contents": "to_sql t string ", "rendered": "<h4 class='item'>let to_sql: <a href=\"./api/SqlComposer.html#type-Select.t\">t</a> => string</h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.limit", "title": "Select.limit", "contents": "limit t option int int t  offset row_count", "rendered": "<h4 class='item'>let limit: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, ~?offset: option(int), ~row_count: int) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.order_by", "title": "Select.order_by", "contents": "order_by t ord t  ", "rendered": "<h4 class='item'>let order_by: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, <a href=\"./api/SqlComposer.html#type-Select.ord\">ord</a>) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.group_by", "title": "Select.group_by", "contents": "group_by t string t  ", "rendered": "<h4 class='item'>let group_by: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, string) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.where", "title": "Select.where", "contents": "where t string t  ", "rendered": "<h4 class='item'>let where: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, string) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.join", "title": "Select.join", "contents": "join t string t  ", "rendered": "<h4 class='item'>let join: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, string) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.from", "title": "Select.from", "contents": "from t string t  ", "rendered": "<h4 class='item'>let from: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, string) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.field", "title": "Select.field", "contents": "field t string t  ", "rendered": "<h4 class='item'>let field: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, string) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.modifier", "title": "Select.modifier", "contents": "modifier t flag t  ", "rendered": "<h4 class='item'>let modifier: (<a href=\"./api/SqlComposer.html#type-Select.t\">t</a>, <a href=\"./api/SqlComposer.html#type-Select.flag\">flag</a>) => <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#value-Select.select", "title": "Select.select", "contents": "select t", "rendered": "<h4 class='item'>let select: <a href=\"./api/SqlComposer.html#type-Select.t\">t</a></h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#type-Select.ord", "title": "Select.ord", "contents": "ord ", "rendered": "<h4 class='item'>type ord = [ `Asc of string | `Desc of string ]</h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#type-Select.flag", "title": "Select.flag", "contents": "flag ", "rendered": "<h4 class='item'>type flag = [ `MySqlCalcFoundRows\n| `MySqlNoCache\n| `HighPriority\n| `Distinct\n| `StraightJoin ]</h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#type-Select.t", "title": "Select.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#module-Select", "title": "Select", "contents": "@rest", "rendered": "@rest", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html", "title": "code block", "contents": "let sql =\n  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. where(\"AND test.foo = ?\")\n    |. to_sql\n  );\nJs.log2(\"SQL: \", sql);", "rendered": "<pre><code>let sql =\n  SqlComposer.Select.(\n    select\n    |. field(\"*\")\n    |. from(\"test\")\n    |. where(\"AND test.foo = ?\")\n    |. to_sql\n  );\nJs.log2(\"SQL: \", sql);</code></pre>", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#module-Select", "title": "Select", "contents": "Here is a basic example:", "rendered": "Here is a basic example:", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#module-Select", "title": "Select", "contents": "Generate composable SQL Select queries and query fragments.", "rendered": "Generate composable SQL Select queries and query fragments.", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#SqlComposer.Select", "title": "SqlComposer.Select", "contents": "", "rendered": "", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#module-Select", "title": "Select", "contents": "", "rendered": "", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html", "title": "SqlComposer", "contents": "@rest", "rendered": "@rest", "breadcrumb": "SqlComposer"},
{"href": "./api/SqlComposer.html#SqlComposer", "title": "SqlComposer", "contents": "", "rendered": "", "breadcrumb": "SqlComposer"}]